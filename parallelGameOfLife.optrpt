Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: main(int, char **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main(int, char **)) [1] parallelGameOfLife.cc(8,33)
  -> (33,31) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (81,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))


    Report from: OpenMP optimizations [openmp]

parallelGameOfLife.cc(27:1-27:1):OMP:main:  OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at parallelGameOfLife.cc(31,4)
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED

   LOOP BEGIN at parallelGameOfLife.cc(32,8)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at parallelGameOfLife.cc(37,12)
         remark #25460: No loop optimizations reported

         LOOP BEGIN at parallelGameOfLife.cc(38,16)
            remark #25460: No loop optimizations reported
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at parallelGameOfLife.cc(31,4)
<Remainder loop for vectorization>

   LOOP BEGIN at parallelGameOfLife.cc(32,8)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at parallelGameOfLife.cc(37,12)
         remark #25460: No loop optimizations reported

         LOOP BEGIN at parallelGameOfLife.cc(38,16)
            remark #25460: No loop optimizations reported
         LOOP END
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at parallelGameOfLife.cc(80,4)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ parallelGameOfLife.cc(82,8) ]

   LOOP BEGIN at parallelGameOfLife.cc(82,8)
      remark #15523: loop was not vectorized: loop control variable y was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

parallelGameOfLife.cc(15,23):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
parallelGameOfLife.cc(20,25):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
parallelGameOfLife.cc(8,33):remark #34051: REGISTER ALLOCATION : [main] parallelGameOfLife.cc:8

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   29[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm14]
        
    Routine temporaries
        Total         :     358
            Global    :     113
            Local     :     245
        Regenerable   :      88
        Spilled       :      31
        
    Routine stack
        Variables     :     164 bytes*
            Reads     :      10 [1.85e+01 ~ 0.7%]
            Writes    :      19 [2.38e+01 ~ 0.9%]
        Spills        :     336 bytes*
            Reads     :      59 [1.02e+02 ~ 3.7%]
            Writes    :      46 [2.78e+01 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [8] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [__sti__$E] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       7
            Local     :       6
        Regenerable   :       7
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
